Основа: http://htmlbook.ru/samlayout/blochnaya-verstka

Несмотря на то, что термин <span style="color:green">«блок»</span> достаточно устойчиво используется при разработке <span style="color:green">сайта</span>, расшифровке этого понятия в литературе по сайтостроению практически не уделяется внимание. В дальнейшем я буду активно использовать термин <span style="color:green">«блок»</span>, поэтому вначале необходимо определить, что же под ним подразумевается.

История
Первый шаг сделала компания Netscape, включив в свой браузер поддержку <span style="color:blue">тега</span> <layer>. Этот <span style="color:blue">тег</span> позволял прятать/показывать текущее содержимое, устанавливать положение относительно окна браузера, накладывать один слой поверх других и загружать данные в содержимое слоя из файла. Все эти параметры легко менялись с помощью JavaScript и это расширяло возможности по созданию действительно динамического контента на странице. Несмотря на столь впечатляющий набор возможностей, <span style="color:blue">тег</span> <layer> не был включён в спецификацию HTML и остался лишь расширением браузера Netscape.

Однако необходимость в указанных возможностях уже назрела, и в конце 1999 года синтаксис для работы со слоями был разработан и одобрен в рабочем проекте консорциума «CSS Positioning (CSS-P)». Основная нагрузка ложилась на стили, с их помощью можно управлять видом любого элемента, в том числе менять значения динамически через JavaScript.

Кроссбраузерность
В начале развития Интернета, объектные модели браузеров для доступа к элементам различались, поэтому приходилось писать достаточно сложный код, который бы учитывал эти особенности. В настоящее время разработчики популярных браузеров стали придерживаться спецификаций HTML и CSS, что сильно облегчило жизнь создателям <span style="color:red">сайтов</span>, поскольку это снизило время на отладку <span style="color:red">сайта</span> в разных браузерах.
С развитием рынка мобильных устройств, появилась необходимость разрабатывать разные версии <span style="color:red">сайтов</span> для обычных и для мобильных браузеров. Поэтому 19 июня 2012 года консорциум опубликовал поддержку медиазапросов. Обновленная спецификация позволила создавать <span style="color:red">сайты</span>, которые выглядят по-разному на различных устройствах.

Как правило, при разработке <span style="color:red">сайта</span>, отдельно оговаривается необходимость готовить <span style="color:red">сайт</span> для определенных версий браузеров и для определенных устройств. Некоторые заказчики могут попросить воспользоваться элементом, который еще не поддерживается всеми браузерами. Разработчики в этом случае придерживаются позиции "Любой каприз за ваши деньги".

Принципы блочной верстки
Снова вернемся к <span style="color:green">блокам</span>. Понятно, что они непосредственно связаны со стилями. Раз так, то не получается ли, что каждый элемент HTML-кода, к которому добавляются стили, является <span style="color:green">блоком</span>? В каком-то смысле так и есть. Однако это внесло бы изрядную путаницу, если вместо «таблица» или «абзац» мы бы говорили <span style="color:green">«блок»</span>. Поэтому договоримся относить этот термин только к <span style="color:green">тегам</span> <div>.

Начиная с HTML4 и XHTML, <span style="color:green">блок</span> — это элемент веб-страницы, созданный с помощью <span style="color:blue">тега</blue> <div>, к которому применяется стилевое оформление.

Таким образом, выражение «блочная вёрстка» или вёрстка с помощью <span style="color:green">блоков</span> заключается в конструктивном использовании <span style="color:blue">тегов</span> <div> и стилей. При этом придерживаются следующих принципов.

Разделение содержимого и оформления
Код HTML должен содержать только теги разметки и теги логического форматирования, а любое оформление выносится за пределы кода в стили. Такой подход позволяет независимо управлять видом элементов страницы и её содержимым. Благодаря этому над <span style="color:red">сайтом</span> может работать несколько человек, при этом каждый выполняет свою функцию самостоятельно от других. Дизайнер, верстальщик и программист работают над своими задачами автономно, снижая время на разработку <span style="color:red">сайта</span>.

Активное применение <span style="color:blue">тега</span> <div>
При блочной вёрстке существенное значение уделяется универсальному <span style="color:blue">тегу</span> <div>, который выполняет множество функций. Фактически это основа, на которую «навешиваются» стили, превращая её то в игрушку, то в зверушку. Совершенно не значит, что применяется только один этот <span style="color:blue">тег</span>, нужно ведь и рисунки вставлять и оформлять текст. Но при вёрстке с помощью <span style="color:green">блоков</span> <span style="color:blue">тег</span> <div> является кирпичиком вёрстки, её базовым фундаментом.

Благодаря этому <span style="color:blue">тегу</span> HTML-код распадается на ряд чётких наглядных <span style="color:green">блоков</span>, код при этом получается более компактным, чем при табличной вёрстке, к тому же поисковые системы его лучше индексируют.

Таблицы применяются только для представления табличных данных
При блочной вёрстке, конечно же, используются таблицы, но только в тех случаях, когда они нужны, например, для наглядного отображения чисел и других табличных данных. Вариант, когда от таблиц предлагается отказаться вообще, является нецелесообразным и, более того, вредным.

Подведу итоги. Начиная с HTML4 и XHTML, <span style="color:green">блок</span> это базовый элемент вёрстки веб-страниц, при которой активно применяются стили и придерживаются спецификаций HTML и CSS. При таком подходе важная роль уделяется <span style="color:blue">тегу</span> <div>, с которым у большинства людей и ассоциируются <span style="color:green">блоки</span>. В каком-то смысле это является верным, поэтому договоримся в дальнейшем употреблять термин <span style="color:green">«блок»</span> к <span style="color:blue">тегу</span> <div> для которого указан стилевой идентификатор или класс. Таким образом, выражение «<span style="color:green">блок</span> с именем content» подразумевает, что используется <span style="color:blue">тег</span> <div id="content"> или <div class="content">.

В HTML5 добавлено несколько новых <span style="color:blue">тегов</span> разметки для обозначения разных типовых <span style="color:green">блоков</span> страницы. К примеру, <header> и <footer> используются для создания «шапки» и «подвала», <nav> для навигации, <aside> для боковой панели. Включение в спецификацию HTML подобных элементов призвано снизить доминирование <span style="color:blue">тега</blue> <div> и придать больше смысла разметке. Поэтому в вёрстке на HTML5 активно применяется термин «элемент», под которым подразумевается соответствующий <span style="color:blue">тег</span> и элемент который он создаёт.

Изложенные выше принципы блочной вёрстки при этом сохраняются за исключением того момента, что <div> в некоторых случаях заменяется более осмысленными <span style="color:blue">тегами</span>.